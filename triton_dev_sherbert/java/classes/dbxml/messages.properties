Queries.getDetections=\
<Detections xmlns:xsi="http://cetus.ucsd.edu/Deployment"> \n\
{for $item in ( \n\
	for $det in %s \n\
	%s \n\
  	return  \n\
  	   for $detection in $det/%s/Detection  \n\
  	   %s \n\
	   return \n\
	    	<Detection> \n\
			{$detection/Species} \n\
			{$detection/Call} \n\
			{$detection/Start} \n\
			{$detection/End} \n\
			</Detection> \n\
	)  \n\
order by $item/Detection/Start \n\
return $item \n\
} \n\
</Detections>

Queries.getEvents=\
<Events> \n\
{for $event in collection("Events")/Event \n\
  %s \n\
  return \n\
     $event \n\
} \n\
</Events>

Queries.getEffort=\
<Detections xmlns:xsi="http://cetus.ucsd.edu/Deployment">	\n\
{	\n\
let $groups :=	\n\
    for $detgroup in collection("Detections")/Detections	\n\
        %s	\n\
    return $detgroup	\n\
for $g in $groups	\n\
    let $kinds :=	\n\
        for $k in $groups/Effort/Kind	\n\
            %s	\n\
        return $k	\n\
return	\n\
<Effort>	\n\
{$g/Effort/Start}	\n\
{$g/Effort/End}	\n\
<XML_Document>	\n\
{base-uri($g)}	\n\
</XML_Document>	\n\
{for $k in $kinds	\n\
return	\n\
$k	\n\
}	\n\
</Effort>	\n\
}	\n\
</Detections>	\n\

// Right now, looking at detections, but will move to looking at $det/Effort
// Should call type be returned?  If so, current distinct-values clause on
// species will have to be removed.	
Queries.OldgetEffort=\
<Detections xmlns:xsi="http://cetus.ucsd.edu/Deployment">	\n\
{for $item in (	\n\
    for $detgroup in collection("Detections")/Detections 	\n\
        (: meeting the following meta conditions about the detection	\n\
           such as site, deployment etc. :)	\n\
        %s \n\
        return	\n\
    	let $detections := (	\n\
    	    for $det in $detgroup/Detection	\n\
    	    	 (: meeting conditions about detections themselves :)	\n\
		    %s \n\
    	    return $det)	\n\
    	let $species := distinct-values($detections/Species)	\n\
            return	\n\
    	    for $s in $species	\n\
    	      let $species_calls := distinct-values(for $d in $detections where $d/Species = $s return $d/Call_type)	\n\
    	      for $c in $species_calls	\n\
       	      return 	\n\
    	        <Effort>	\n\
    		<Species>{$s}</Species>	\n\
    		<Call>{$c}</Call>	\n\
            	{$detgroup/Detector} 		\n\
            	{$detgroup/Parameters} 		\n\
            	{$detgroup/Site} \n\
            	{$detgroup/Project} \n\
            	{$detgroup/Region} \n\
            	{$detgroup/Deployment} \n\
            	{$detgroup/Effort/Start} 		\n\
            	{$detgroup/Effort/End}	\n\
    		<XML_Document>{base-uri($detgroup)}</XML_Document>	\n\
            	</Effort> 	\n\
) order by $item/Species	\n\
  return $item}	\n\
</Detections>	\n

Queries.getFixedDeployment = \
<Deployment> \n\
{for $fixed in collection("Deployment")/Deployment/Fixed \n\
  %s\n\
  return $fixed} \n\
</Deployment>

Queries.bogus = \
for $item in (for $det in collection("Detections")/Detections \n\
        where upper-case($det/Project) = upper-case("%s") \n\
        and upper-case($det/Site) = upper-case("%s") \n\
        and $det/Deployment = "%s" \n\
        return \n\
        for $species in distinct-values($det/Detection/Species) \n\
	        return \n\
	          concat( \n\
	  			   xs:string($species), "\t", \n\
	  			   xs:string($det/Detector), "\t", \n\
	  			   xs:string($det/Parameters), "\t", \n\
	    		   xs:string($det/Effort/Start), "\t", \n\
	    		   xs:string($det/Effort/End))) \n\
		order by $item \n\
	    return $item   		   
Queries.getDetectedCallTypes=\
for $calltype in distinct-values(collection("Detections")/Detections%s/Detection%s/Call) \n\
    order by upper-case($calltype) \n\
    return  \n\
	$calltype \n\

	
	    		   
 